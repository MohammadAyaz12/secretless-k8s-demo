#!/usr/bin/env bash

set -x

export SKIP_SNAPSHOT=yes
export LOG=file

echo Bringing up a cluster
bash -c '/usr/local/bin/kind create cluster --image kindest/node:v1.17.0 --name secretless-kube'

echo Modifying Kubernetes config to point to Kind master node
master_ip=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' secretless-kube-control-plane)
sed -i "s/^    server:.*/    server: https:\/\/$master_ip:6443/" $HOME/.kube/config
cd

echo Deploying Kubernetes dashboard
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc3/aio/deploy/recommended.yaml

set +x
echo ====================================================
echo Deploying CyberArk Secretless Broker Kubernetes Demo
echo ====================================================

echo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cat <<EOF
Security Administrator Setup:
  Running script to:
    1. Create a PostgreSQL database
    2. Create a DB user for the application
    3. Add that user's credentials to Kubernetes Secrets
    4. Configure Secretless to connect to PostgreSQL using those credentials
EOF
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cd /root/secretless-broker/demos/k8s-demo
./01_security_admin_steps

echo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cat <<EOF
Application Developer Setup:
  Running script to:
    1. Configure the application to connect to PostgreSQL via Secretless
    2. Deploy the application and the Secretless sidecar
    3. Test the application
EOF
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./02_app_developer_steps

# Test application will be exposed on NodePort 30970
# TODO: May have to use a worker node IP for multi-node operation
# TODO: Use -o go-template and set up a temlate to read application nodePort.
node_port=$(kubectl get svc -n quick-start-application-ns quick-start-application -o yaml | awk '/nodePort/{print $3}')
export APPLICATION_URL=$master_ip:$node_port

echo ====================================================
echo ====================================================
echo   
echo The Secretless Broker Kubernetes demo is running!!!
echo
echo A "Pet Store" application pod has been deployed that
echo contains both an application container and a CyberArk Secretless
echo Broker sidecar container. The Secretless Broker sidecar container
echo allows the application to connect to a password-protected Postgres
echo database without any knowledge of database credentials!!!
echo
echo To see the Kubernetes resources that have been configured,
echo start with the following commands:
echo
echo     kubectl get namespaces
echo     kubectl get all -n quick-start-application-ns
echo     kubectl get all -n quick-start-backend-ns
echo
echo To see the CyberArk Secretless Broker in action, use the scripts
echo in /root to create and list pets in the pet store:
echo 
echo     add_pet "Genghis D. Dog"
echo     add_pet "Miss Ava"
echo     list_pets
echo  
echo ====================================================
echo ====================================================

# TODO: Set up a kubectl proxy between the demo client container
# and the Kubernetes cluster, using the IP address of the demo client
# container. This is useful for accessing the Kubernetes dashboard
# from the Docker host.
#kubectl proxy --address='172.17.0.2' --accept-hosts='^localhost$,^127\.0\.0\.1$,^\[::1\]$,^172\.17\.0\.2$' &

# Start up a bash shell to try out Secretless
cd
/bin/bash

# Clean up cluster after exit from shell
kind delete cluster --name secretless-kube

